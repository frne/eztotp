<?php
/**
 * EzTotp: Two-factor authentication with Google Authenticator for eZPublish
 *
 * @package EzTotp
 * @version 0.2
 * @author Frank Neff <fneff89@gmail.com>
 * @license LGPL v3 - http://www.gnu.org/licenses/lgpl-3.0.en.html
 */

/**
 * Test class for EzTotpAuthentication.
 * Generated by PHPUnit on 2012-04-05 at 13:21:00.
 */
class EzTotpAuthenticationTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var EzTotpAuthentication
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $ini = new eZINI("eztotp.ini", 'extension/eztotp/settings', null, null, true);
        $ini->resetOverrideDirs();
        $ini->resetGlobalOverrideDirs();
        $ini->load(true);

        $config = new EzTotpConfiguration();
        $config->loadConfiguration($ini);
        $this->object = new EzTotpAuthentication($config);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers EzTotpAuthentication::__construct
     */
    public function test__construct()
    {
        $ini = new eZINI("eztotp.ini", 'extension/eztotp/settings', null, null, true);
        $ini->resetOverrideDirs();
        $ini->resetGlobalOverrideDirs();
        $ini->load(true);

        $config = new EzTotpConfiguration();
        $config->loadConfiguration($ini);
        $object = new EzTotpAuthentication($config);
        $this->assertTrue($object instanceof EzTotpAuthentication);
    }

    /**
     * @covers EzTotpAuthentication::setInitialisationSeed
     */
    public function testSetInitialisationSeed()
    {
        // whitelist
        $this->object->setInitialisationSeed("SHNDJGTHNOTHGNDGETOGADRHGOPTHB");
        $key = $this->object->getKey();
        $this->assertFalse(empty($key));

        // blacklist
        try {
            $this->object->setInitialisationSeed(null);
            $result = false;
        }
        catch (Exception $e)
        {
            $result = true;
        }
        $this->assertTrue($result);
    }

    /**
     * @covers EzTotpAuthentication::getKey
     * @covers EzTotpAuthentication::oath_hotp
     */
    public function testGetKey()
    {
        $this->object->setInitialisationSeed("SHNDJGTHNOTHGNDGETOGADRHGOPTHB");
        $key = $this->object->getKey();
        $this->assertTrue(strlen($key) == 6);
    }

    /**
     * @covers EzTotpAuthentication::verify
     * @covers EzTotpAuthentication::get_timestamp
     * @covers EzTotpAuthentication::oath_truncate
     * @covers EzTotpAuthenticationHelperAbstract::base32_decode
     */
    public function testVerify()
    {
        $this->object->setInitialisationSeed("SHNDJGTHNOTHGNDGETOGADRHGOPTHB");
        $key = $this->object->getKey();
        $this->assertTrue($this->object->verify($key));
        $this->assertFalse($this->object->verify(000000));
    }
}
?>